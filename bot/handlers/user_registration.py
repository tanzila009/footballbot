from aiogram import Router, F, Bot
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile, InlineKeyboardMarkup, \
    InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from asgiref.sync import sync_to_async
from asyncio import create_task, sleep
from football_app.models import Player
from aiogram import types

router = Router()
group_chat_id = -1002761093639
my_chat_id = 528077024


class RegisterState(StatesGroup):
    name = State()
    phone = State()

@router.message(F.text == "/start")
async def start(message: Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ñ—É—Ç–±–æ–ª.\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(RegisterState.name)

@router.message(RegisterState.name)
async def ask_phone(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    kb = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True, one_time_keyboard=True)]
    ], resize_keyboard=True, one_time_keyboard=True)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä", reply_markup=kb)
    await state.set_state(RegisterState.phone)

@router.message(RegisterState.phone, F.contact)
async def finish_registration(message: Message, state: FSMContext):
    data = await state.get_data()
    name = data.get("name")
    phone = message.contact.phone_number
    telegram_id = message.from_user.id

    await sync_to_async(Player.objects.update_or_create)(
        telegram_id=telegram_id,
        defaults={"full_name": name, "phone": phone},
    )

    await message.bot.send_message(
        chat_id=group_chat_id,
        text=f"‚úÖ –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è:\n\nüë§ –ò–º—è: {name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüÜî Telegram ID: {telegram_id}"
    )

    await state.clear()

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚öΩ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É", callback_data="register_game")]
        ]
    )

    await message.answer(
        "–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ. –¢–µ–ø–µ—Ä—å —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—ã.",
        reply_markup=ReplyKeyboardRemove()
    )

    await message.answer(
        "üëá –ù–∞–∂–º–∏, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –∏–≥—Ä—É:",
        reply_markup=keyboard
    )

class GameRegState(StatesGroup):
    waiting_for_receipt = State()

@router.callback_query(F.data == "register_game")
async def handle_register_game(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer(
        "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –º–∞—Ç—á, –ø–µ—Ä–µ–≤–µ–¥–∏ —Å—É–º–º—É 1000 —Ç–≥ –Ω–∞ –∫–∞—Ä—Ç—É: +7 707 495 17 99 (Kaspi –ú–∏—Ä–∞—Å) 4400430244219793\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞ —Å—é–¥–∞."
    )
    await state.set_state(GameRegState.waiting_for_receipt)
    await callback.answer()

    async def remind():
        await sleep(900)
        if await state.get_state() == GameRegState.waiting_for_receipt:
            await callback.message.answer("–ù–∞–ø–æ–º–∏–Ω–∞–µ–º! –î–ª—è —É—á–∞—Å—Ç–∏—è –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∏ –ø—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫.")

    async def timeout():
        await sleep(3600)
        if await state.get_state() == GameRegState.waiting_for_receipt:
            await callback.message.answer("‚è∞ –í—Ä–µ–º—è –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏—Å—Ç–µ–∫–ª–æ, —Ç–≤–æ—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≥—Ä—É –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            await state.clear()

    create_task(remind())
    create_task(timeout())


@router.message(GameRegState.waiting_for_receipt, F.photo | F.document)
async def handle_receipt(message: Message, state: FSMContext):
    telegram_id = message.from_user.id

    try:
        player = await sync_to_async(Player.objects.get)(telegram_id=telegram_id)
        full_name = player.full_name
        phone = player.phone
        player.is_registered_for_game = True
        await sync_to_async(player.save)()
    except Player.DoesNotExist:
        full_name = message.from_user.full_name
        phone = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    await message.answer("–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")

    await message.bot.send_message(
        chat_id=group_chat_id,
        text=f"üì• –ù–æ–≤—ã–π —á–µ–∫ –æ—Ç –∏–≥—Ä–æ–∫–∞:\nüë§ –ò–º—è: {full_name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
    )

    if message.photo:
        await message.bot.send_photo(chat_id=group_chat_id, photo=message.photo[-1].file_id)
    elif message.document:
        await message.bot.send_document(chat_id=group_chat_id, document=message.document.file_id)

    await state.clear()

@router.message(F.text == "/remind")
async def remind_players(message: Message):
    if message.chat.id != my_chat_id:
        return  # –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å

    players = await sync_to_async(list)(
        Player.objects.filter(is_registered_for_game=True)
    )

    success_count = 0
    for player in players:
        try:
            await message.bot.send_message(
                chat_id=player.telegram_id,
                text="‚öΩ –ù–∞–ø–æ–º–∏–Ω–∞–µ–º! –ó–∞–≤—Ç—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è —Ñ—É—Ç–±–æ–ª. –î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –ø–æ–ª–µ!"
            )
            success_count += 1
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫—É {player.telegram_id}: {e}")

    await message.answer(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {success_count} —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.")

@router.message(F.text == "/players")
async def list_registered_players(message: Message):
    if message.chat.id != my_chat_id:
        return  # –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫

    players = await sync_to_async(list)(Player.objects.all())

    if not players:
        await message.answer("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.")
        return

    msg = "üìã <b>–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤:</b>\n\n"
    for idx, player in enumerate(players, start=1):
        msg += f"{idx}. üë§ {player.full_name} | üìû {player.phone}\n"

    await message.answer(msg, parse_mode="HTML")


